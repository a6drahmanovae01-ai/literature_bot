import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from config import TOKEN
import json
import random

bot = Bot(token=TOKEN)
dp = Dispatcher()

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
with open("literature_quiz.json", "r", encoding="utf-8") as f:
    quiz_data = json.load(f)

with open("olympiad_questions.json", "r", encoding="utf-8") as f:
    olympiad_data = json.load(f)


@dp.message(Command("start"))
async def start(message: types.Message):
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω, —Ç–µ—Å—Ç–æ–≤ –∏ –æ–ª–∏–º–ø–∏–∞–¥–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ.\n\n"
        "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/quiz ‚Äì –í–∏–∫—Ç–æ—Ä–∏–Ω–∞\n"
        "/test ‚Äì –¢–µ—Å—Ç\n"
        "/olympiad ‚Äì –û–ª–∏–º–ø–∏–∞–¥–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n"
        "/help ‚Äì –ü–æ–º–æ—â—å"
    )
    await message.answer(text)


@dp.message(Command("help"))
async def help_command(message: types.Message):
    await message.answer("–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ üìö.\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã: /quiz /test /olympiad")


@dp.message(Command("quiz"))
async def quiz_command(message: types.Message):
    q = random.choice(quiz_data)
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[[types.KeyboardButton(text=a)] for a in q["options"]],
        resize_keyboard=True
    )
    await message.answer(q["question"], reply_markup=keyboard)


@dp.message(Command("test"))
async def test_command(message: types.Message):
    await message.answer("üìñ –¢–µ—Å—Ç—ã –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã!")


@dp.message(Command("olympiad"))
async def olympiad_command(message: types.Message):
    q = random.choice(olympiad_data)
    await message.answer(f"üèÜ –û–ª–∏–º–ø–∏–∞–¥–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ:\n\n{q}")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
